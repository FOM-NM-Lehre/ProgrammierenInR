---
title: "Vorbereitungen-PostgreSQL-Datenbank"
author: "Norman Markgraf"
date: today
lang: de
execute:
  echo: true
  eval: true
format: html
---

## Auf dem Mac mit HomeBrew

Basierend auf den Ideen die ich unter <https://kinsta.com/de/blog/postgres-datenbankerstellung/> gefunden habe

```{sh}
#| eval: false
#| echo: true
> brew install postgresql
```

Die endscheidende Meldung am Ende des Installationsprozess lautet:
"
This formula has created a default database cluster with:
  initdb --locale=C -E UTF-8 /usr/local/var/postgresql@14

To start postgresql@14 now and restart at login:
  brew services start postgresql@14
Or, if you don't want/need a background service you can just run:
  /usr/local/opt/postgresql@14/bin/postgres -D /usr/local/var/postgresql@14
 "

Da ich die Datenbank nur zum Testen laufen lassen will, starte ich also mit:
```{sh}
#| eval: false
#| echo: true
> /usr/local/opt/postgresql@14/bin/postgres -D /usr/local/var/postgresql@14
```

Die Ausgabe
```
2025-08-27 10:06:10.259 CEST [10698] LOG:  starting PostgreSQL 14.19 (Homebrew) on x86_64-apple-darwin23.6.0, compiled by Apple clang version 16.0.0 (clang-1600.0.26.6), 64-bit
2025-08-27 10:06:10.259 CEST [10698] LOG:  listening on IPv6 address "::1", port 5432
2025-08-27 10:06:10.260 CEST [10698] LOG:  listening on IPv6 address "fe80::1%lo0", port 5432
2025-08-27 10:06:10.260 CEST [10698] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2025-08-27 10:06:10.260 CEST [10698] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2025-08-27 10:06:10.264 CEST [10699] LOG:  database system was shut down at 2025-08-27 10:04:49 CEST
2025-08-27 10:06:10.267 CEST [10698] LOG:  database system is ready to accept connections
```

zeigt mir, dass PostgreSQL lÃ¤uft und auf dem Port 5432 auf Anfangen wartet.

Ich starte daher `psql`:

```{sh}
#| eval: false
#| echo: true
> psql postgres
```


## Vorbereitungen in R

Zuerst bauchen wir das R-Paket `RPostgreSQL`:

```{r}
#| eval: false
#| echo: true

install.package("RPostgreSQL")
```


Danach laden wir die entsprechenden Pakete in R:

```{r}
#| warning: false
#| eval: true
#| echo: true
library(DBI)
library(RPostgreSQL)
library(dplyr)
```


Um mit der Datenbank verbuden zu werden brauchen wir die Zugangsdaten:

```{r}
#| eval: false
#| echo: true
drv <- dbDriver("PostgreSQL")
con <- dbConnect(
            drv,
            host = "<IP-Adresse>",    # IP4 - Adresse der PostgreSQL-Servers
            port = 5432,               # Port 
            user = "postgres",         # Benutzer:innen-Name mit entsprechenden Rechten
            password = "<passwort>", # Passwort
            dbname = "netflix"         # Name der Datenbank im PostgreSQL-Server
        )
```

```{r}
#| eval: true
#| echo: false
drv <- dbDriver("PostgreSQL")
con <- dbConnect(
            drv,
            host = "localhost",    # IP4 - Adresse der PostgreSQL-Servers
            port = 5432,               # Port 
            user = "postgres",         # Benutzer:innen-Name mit entsprechenden Rechten
            password = "", # Passwort
            dbname = "netflix"         # Name der Datenbank im PostgreSQL-Server
        )
```


Jetzt haben wir eine Verbindung zum PostgreSQL-Server.

